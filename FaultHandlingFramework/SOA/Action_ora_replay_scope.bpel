<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Apr 12 11:54:28 MDT 2010
  Author:  greg
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="Action_ora_replay_scope"
         targetNamespace="http://xmlns.oracle.com/bpel_300_FaultHandlingFramework_jws/SampleFeatureRouter/Action_ora_replay_scope"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:client="http://xmlns.oracle.com/bpel_300_FaultHandlingFramework_jws/SampleFeatureRouter/Action_ora_replay_scope"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns1="http://xmlns.oracle.com/bpel_300_FaultHandlingFramework_jws/SampleFeatureRouter/FaultGeneratorBPELProcess"
         xmlns:ns2="http://xmlns.oracle.com/FaultHandlingFrameworkSample"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:xpath20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:med="http://schemas.oracle.com/mediator/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <bpelx:annotation>
        <bpelx:analysis>
            <bpelx:property name="wsdlFile">
                <![CDATA[Action_ora_replay_scope.wsdl]]>
            </bpelx:property>
        </bpelx:analysis>
    </bpelx:annotation>
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="action_ora_replay_scope_client" partnerLinkType="client:Action_ora_replay_scope" myRole="Action_ora_replay_scopeProvider" partnerRole="Action_ora_replay_scopeRequester"/>
        <partnerLink name="FaultGeneratorBPELProcess.faultgeneratorbpelprocess_client"
                     partnerRole="FaultGeneratorBPELProcessProvider"
                     partnerLinkType="ns1:FaultGeneratorBPELProcess"/>
    </partnerLinks>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable" messageType="client:Action_ora_replay_scopeRequestMessage"/>

        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="outputVariable" messageType="client:Action_ora_replay_scopeResponseMessage"/>
        <variable name="InvokeFaultGenerator_InputVariable"
                  messageType="ns1:FaultGeneratorBPELProcessRequestMessage"/>
        <variable name="InvokeFaultGenerator_OutputVariable"
                  messageType="ns1:FaultGeneratorBPELProcessResponseMessage"/>
        <variable name="replayCount" type="xsd:int"/>
    </variables>
    <faultHandlers>
        <catchAll>
            <sequence>
                <assign name="AssignCatchallResponse">
                    <copy>
                        <from variable="inputVariable" part="payload"
                              query="/ns2:sampleRequest/ns2:request"/>
                        <to variable="outputVariable" part="payload"
                            query="/ns2:sampleResponse/ns2:sampleType"/>
                    </copy>
                    <copy>
                        <from expression="'Unhandled Exception ... Catch All'"/>
                        <to variable="outputVariable" part="payload"
                            query="/ns2:sampleResponse/ns2:responseMessage"/>
                    </copy>
                </assign>
                <invoke name="callbackFromCatchAll"
                        inputVariable="outputVariable"
                        partnerLink="action_ora_replay_scope_client"
                        portType="client:Action_ora_replay_scopeCallback"
                        operation="processResponse"/>
            </sequence>
        </catchAll>
    </faultHandlers>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in Action_ora_replay_scope.wsdl) -->
        <receive name="receiveInput" partnerLink="action_ora_replay_scope_client" portType="client:Action_ora_replay_scope" operation="process" variable="inputVariable" createInstance="yes"/>
        <assign name="AssignForReplay">
            <copy>
                <from expression="0"/>
                <to variable="replayCount"/>
            </copy>
        </assign>
        <scope name="ScopeForReplay">
            <sequence>
                <assign name="AssignForInvoke">
                    <copy>
                        <from expression="1 + bpws:getVariableData('replayCount')"/>
                        <to variable="replayCount"/>
                    </copy>
                    <copy>
                        <from variable="inputVariable" part="payload"
                              query="/ns2:sampleRequest/ns2:request"/>
                        <to variable="InvokeFaultGenerator_InputVariable"
                            part="payload"
                            query="/ns2:sampleRequest/ns2:request"/>
                    </copy>
                </assign>
                <switch name="SwitchReplayControl">
                    <case condition="bpws:getVariableData('replayCount') > 5">
                        <empty name="NoOp-Continue"/>
                    </case>
                    <otherwise>
                        <invoke name="InvokeFaultGenerator"
                                inputVariable="InvokeFaultGenerator_InputVariable"
                                outputVariable="InvokeFaultGenerator_OutputVariable"
                                partnerLink="FaultGeneratorBPELProcess.faultgeneratorbpelprocess_client"
                                portType="ns1:FaultGeneratorBPELProcess"
                                operation="process"/>
                    </otherwise>
                </switch>
            </sequence>
        </scope>
        <assign name="AssignResponse">
            <copy>
                <from variable="inputVariable" part="payload"
                      query="/ns2:sampleRequest/ns2:request"/>
                <to variable="outputVariable" part="payload"
                    query="/ns2:sampleResponse/ns2:sampleType"/>
            </copy>
            <copy>
                <from expression="concat('This was a Fault Management Frameworks Sample for ', bpws:getVariableData('inputVariable','payload','/ns2:sampleRequest/ns2:request'))"/>
                <to variable="outputVariable" part="payload"
                    query="/ns2:sampleResponse/ns2:responseMessage"/>
            </copy>
        </assign>

        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <invoke name="callbackClient" partnerLink="action_ora_replay_scope_client" portType="client:Action_ora_replay_scopeCallback" operation="processResponse" inputVariable="outputVariable"/>
    </sequence>
</process>